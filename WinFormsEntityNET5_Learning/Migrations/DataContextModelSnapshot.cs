// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WinFormsEntityNET5_Learning.Models;

namespace WinFormsEntityNET5_Learning.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            FirstName = "Сергей",
                            LastName = "Иванов"
                        },
                        new
                        {
                            Id = 2,
                            Age = 43,
                            FirstName = "Андрей",
                            LastName = "Петров"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Виталий",
                            LastName = "Пугачёв"
                        },
                        new
                        {
                            Id = 4,
                            Age = 34,
                            FirstName = "Ирина",
                            LastName = "Романова"
                        });
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Protocol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Protocols");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Регион"
                        });
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Sequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ProtocolId")
                        .HasColumnType("integer");

                    b.Property<int?>("SerieId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProtocolId");

                    b.HasIndex("SerieId");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.Property<int>("StudyId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("interval");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("StudyId");

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RegionId = 1,
                            StudyId = 1,
                            Time = new TimeSpan(0, 0, 6, 0, 0),
                            Title = "Последовательность"
                        });
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StudyDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Studies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PatientId = 1,
                            StudyDate = new DateTime(2022, 7, 23, 22, 32, 11, 582, DateTimeKind.Local).AddTicks(6121)
                        },
                        new
                        {
                            Id = 2,
                            PatientId = 1,
                            StudyDate = new DateTime(2022, 5, 28, 22, 32, 11, 582, DateTimeKind.Local).AddTicks(8971)
                        },
                        new
                        {
                            Id = 3,
                            PatientId = 2,
                            StudyDate = new DateTime(2022, 7, 20, 22, 32, 11, 582, DateTimeKind.Local).AddTicks(9027)
                        },
                        new
                        {
                            Id = 4,
                            PatientId = 3,
                            StudyDate = new DateTime(2022, 7, 23, 22, 32, 11, 582, DateTimeKind.Local).AddTicks(9031)
                        },
                        new
                        {
                            Id = 5,
                            PatientId = 4,
                            StudyDate = new DateTime(2022, 7, 11, 22, 32, 11, 582, DateTimeKind.Local).AddTicks(9032)
                        },
                        new
                        {
                            Id = 6,
                            PatientId = 4,
                            StudyDate = new DateTime(2022, 6, 26, 22, 32, 11, 582, DateTimeKind.Local).AddTicks(9033)
                        });
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Protocol", b =>
                {
                    b.HasOne("WinFormsEntityNET5_Learning.Models.Region", "Region")
                        .WithMany("Protocols")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Sequence", b =>
                {
                    b.HasOne("WinFormsEntityNET5_Learning.Models.Protocol", "Protocol")
                        .WithMany("Sequences")
                        .HasForeignKey("ProtocolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsEntityNET5_Learning.Models.Serie", null)
                        .WithMany("Sequences")
                        .HasForeignKey("SerieId");

                    b.Navigation("Protocol");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Serie", b =>
                {
                    b.HasOne("WinFormsEntityNET5_Learning.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsEntityNET5_Learning.Models.Study", "Study")
                        .WithMany("Series")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Study", b =>
                {
                    b.HasOne("WinFormsEntityNET5_Learning.Models.Patient", "Patient")
                        .WithMany("Studies")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Patient", b =>
                {
                    b.Navigation("Studies");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Protocol", b =>
                {
                    b.Navigation("Sequences");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Region", b =>
                {
                    b.Navigation("Protocols");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Serie", b =>
                {
                    b.Navigation("Sequences");
                });

            modelBuilder.Entity("WinFormsEntityNET5_Learning.Models.Study", b =>
                {
                    b.Navigation("Series");
                });
#pragma warning restore 612, 618
        }
    }
}
